/*
This file is part of ShieldBlaze ExpressGateway. [www.shieldblaze.com]
Copyright (c) 2020-2021 ShieldBlaze

ShieldBlaze ExpressGateway is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ShieldBlaze ExpressGateway is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ShieldBlaze ExpressGateway.  If not, see <https://www.gnu.org/licenses/>.
 */
syntax = "proto3";
package com.shieldblaze.expressgateway.controlinterface.node;

// ---------------------------- Node Structure ----------------------------

message Node {
  string id = 1;
  string address = 2;
  int32 port = 3;
  int32 activeConnections = 4;
  int32 maxConnections = 5;
  float load = 6;
  string health = 7;
  string state = 8;
}

// ---------------------------- Health Checks ----------------------------

message HealthCheckL4 {
  string nodeID = 1;
  string address = 2;
  int32 port = 3;
  string protocol = 4;
  int32 timeout = 5;
  int32 samples = 6;
}

message HealthCheckHTTP {
  string nodeID = 1;
  string uri = 2;
  int32 timeout = 3;
  int32 samples = 4;
  bool enableTLSValidation = 5;
}

// ---------------------------- Add ----------------------------

message AddRequest {
  string loadBalancerID = 1;
  string address = 2;
  int32 port = 3;
  int32 maxConnections = 4;
  HealthCheckL4 healthCheckL4 = 5;
  HealthCheckHTTP healthCheckHttp = 6;
}

message AddResponse {
  bool success = 1;
  string nodeId = 2;
}

// ---------------------------- Get All ----------------------------

message GetAllRequest {
  string loadBalancerId = 1;
}

message GetAllResponse {
  bool success = 1;
  repeated Node node = 2;
}

// ---------------------------- Get ----------------------------

message GetRequest {
  string loadBalancerId = 1;
  string nodeId = 2;
}

message GetResponse {
  bool success = 1;
  Node node = 2;
}

// ---------------------------- Delete ----------------------------

message DeleteRequest {
  string loadBalancerId = 1;
  string nodeId = 2;
}

message DeleteResponse {
  bool success = 1;
}

// ---------------------------- Service ----------------------------

service NodeService {
  rpc add(AddRequest) returns (AddResponse);
  rpc get(GetRequest) returns (GetResponse);
  rpc getAll(GetAllRequest) returns (GetAllResponse);
  rpc delete(DeleteRequest) returns (DeleteResponse);
}
